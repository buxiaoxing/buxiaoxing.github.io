<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>布小星的笔记</title>
  <icon>https://www.buxiaoxing.com/assets/img/icon.png</icon>
  <subtitle>I&#39;m thinking...</subtitle>
  <link href="https://www.buxiaoxing.com/atom.xml" rel="self"/>
  
  <link href="https://www.buxiaoxing.com/"/>
  <updated>2022-07-26T09:32:28.394Z</updated>
  <id>https://www.buxiaoxing.com/</id>
  
  <author>
    <name>布小星</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js基础-原型</title>
    <link href="https://www.buxiaoxing.com/post/c096.html"/>
    <id>https://www.buxiaoxing.com/post/c096.html</id>
    <published>2022-07-26T09:27:45.000Z</published>
    <updated>2022-07-26T09:32:28.394Z</updated>
    
    <content type="html"><![CDATA[<p><strong>只是这一生冗长，我再难与你相见，难免哽咽</strong></p><a id="more"></a><ul><li><p>原型定义</p><blockquote><p><strong>原型是function对象的一个属性，它定义了构造函数造出对象的公共祖先。</strong><br><strong>通过该构造函数产生的对象，可以继承该原型的属性和方法。原型也是对象。</strong></p></blockquote></li><li><p>查看原型</p><p>隐式属性: <code>__proto__</code></p></li><li><p>查看对象的构造函数</p><p><code>constructor</code></p></li><li><p>访问一个属性，如果对象中没有，则去原型中找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function Person()&#123;&#125;</span><br><span class="line">Person.prototype    -&gt;  原型</span><br><span class="line">new.Person.__proto__    -&gt;  原型</span><br></pre></td></tr></table></figure></li></ul><p>  创建对象隐式调用了</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var this = &#123;__proto__:Person.prototype&#125;</span><br></pre></td></tr></table></figure><ul><li><p>原型上有两个默认的属性</p><ul><li>constructor 构造函数</li><li><code>__proto__</code>原型的原型</li></ul></li><li><p>Object.prototype是最终原型</p><ul><li>Object 是构造函数</li><li>Object.prototype 是一个对象</li></ul></li><li><p>对象.方法()</p><p>方法里面的this指向调用对象</p></li><li><p>Object.create() 创建对象</p><p><code>var obj = Object.create(原型)</code></p></li><li><p>绝大多数对象最终都继承自Object.prototype</p><p>Object.create(null) 创建的对象没有原型</p></li><li><p>undefined.toString();null.toString()</p><p>报错，因为undefined和null原型链上没有Object.prototype</p></li><li><p>原型.方法.call(对象)</p><blockquote><p>指定对象调用原型上的方法</p></blockquote></li><li><p>document.write()会隐式的调用toString方法</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;只是这一生冗长，我再难与你相见，难免哽咽&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="js基础" scheme="https://www.buxiaoxing.com/tags/js基础/"/>
    
    <category term="原型" scheme="https://www.buxiaoxing.com/tags/原型/"/>
    
  </entry>
  
  <entry>
    <title>js基础-对象</title>
    <link href="https://www.buxiaoxing.com/post/a32d.html"/>
    <id>https://www.buxiaoxing.com/post/a32d.html</id>
    <published>2022-07-26T09:18:49.000Z</published>
    <updated>2022-07-26T09:30:41.400Z</updated>
    
    <content type="html"><![CDATA[<p>我不遗憾啊，我怎么会遗憾</p><a id="more"></a><ul><li><p>对象的创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var 对象名 = &#123;</span><br><span class="line">属性名1:属性值2,</span><br><span class="line">属性名2:属性值2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>属性值可以为任何类型的数据，当是函数的时候称为方法</strong><br><strong>注意：对象属性名不能重复</strong></p></li><li><p>对象的操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">增：对象名.属性名 = 属性值</span><br><span class="line">查：对象名.属性名或者对象名[&quot;属性名&quot;]</span><br><span class="line">改：对象名.属性名 = 属性值</span><br><span class="line">删：delete 对象名.属性名</span><br><span class="line">  var 出来的属性删除不掉，</span><br><span class="line">  var a = &apos;123&apos;</span><br><span class="line">  delete window.a-&gt;false</span><br><span class="line">  window.a = 123</span><br><span class="line">  delete window.a-&gt;true</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>对象创建的不同方法</p><ul><li><p>对象字面量<br><code>var obj = {}</code></p></li><li><p>构造函数(创建出来的对象都是独立的)</p><ul><li><p>系统自带构造函数<br><code>var obj = new Object()</code></p></li><li><p>自定义构造函数  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//与函数一样，但命名大驼峰式(每个单词的首字母大写，从第一个单词开始)</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Car</span>(<span class="params">color</span>)</span>&#123;<span class="comment">//构造函数可以有参数，如果创建对象的时候没有传参数，该参数为undefined</span></span><br><span class="line"><span class="keyword">this</span>.name = <span class="string">"BMW"</span><span class="comment">//设置属性方法，this.属性 = 属性值;</span></span><br><span class="line"><span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> car = <span class="keyword">new</span> Car(<span class="string">'red'</span>);<span class="comment">//创建对象的时候指定参数</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><pre><code>**构造函数内部原理**<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1) 在函数体最前面隐式的加上this=&#123;&#125;</span><br><span class="line">(2) 执行this.xxx = xxx;</span><br><span class="line">(3) 隐式的返回this;</span><br></pre></td></tr></table></figure></code></pre><ul><li><p>包装类</p><blockquote><p>原始值是不能有属性和方法的<br>当原始值调用对象属性方法时，并不会报错，中间经历了一个包装类的过程</p></blockquote><p><img src="http://img.buxiaoxing.com/uPic/2022/07/26172549-v7OsLd-image-20220726172547421.png" alt="image-20220726172547421"></p></li><li><p>对象调用属性的方法</p><ul><li><code>对象.属性</code></li><li><code>对象[&quot;属性&quot;]</code></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;我不遗憾啊，我怎么会遗憾&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="js基础" scheme="https://www.buxiaoxing.com/tags/js基础/"/>
    
  </entry>
  
  <entry>
    <title>js基础-作用域与预编译</title>
    <link href="https://www.buxiaoxing.com/post/1ae0.html"/>
    <id>https://www.buxiaoxing.com/post/1ae0.html</id>
    <published>2022-07-26T09:16:33.000Z</published>
    <updated>2022-07-26T09:29:09.706Z</updated>
    
    <content type="html"><![CDATA[<p><strong>要知道那是最后一次见面，我就穿好看点了</strong></p><a id="more"></a><ul><li><p>作用域定义</p><p>变量和函数生效(能被访问)的区域<br>里面的能访问外面的，外面的不能访问里面的</p><ul><li><p>js运行三部曲</p><ol><li><p>语法分析<br>检测低级语法错误</p></li><li><p>预编译  </p><p>函数 - &gt;整体提升</p><p>变量 - &gt;声明提升</p></li><li><p>解释执行<br>执行的时候就不用看提升了的部分，直接访问AO</p></li></ol></li></ul></li><li><p>imply global(暗示全局变量)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     任何变量，如果变量未经声明就赋值，此变量为全局对象所有(归window所有)</span><br><span class="line">所有声明的全局变量都归window所有，window就是全局。</span><br><span class="line">function test()&#123;</span><br><span class="line">var a=b=1;</span><br><span class="line">//b就是暗示全局变量</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>预编译四部曲</p><ol><li>创建AO对象（执行期上下文，作用域）</li><li>找形参和参数变量，将变量和形参作为AO属性名，值为undefined</li><li>将实参值和形参统一</li><li>在函数体里找到函数声明，函数名作为AO属性名，属性值赋予函数体</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">执行的时候就去AO中取</span><br><span class="line">函数的预编译就是AO，全局的预编译是GO</span><br><span class="line">先生成GO再生成AO</span><br><span class="line">AO生成于函数执行的前一刻</span><br></pre></td></tr></table></figure></li></ul><ul><li>[[scope]]<ul><li>含义  <ul><li>每个javascript函数都是一个对象，对象中有些属性我们可以访问，但有些不可以，这些属性仅供<br>javascript引擎存取，[[scope]]就是其中一个。  </li><li>[[scope]]指的就是我们所说的作用域链，其中存储了执行期上下文(作用域)的集合;  </li><li>每个函数定义时的[[scope]]等于上一级函数的执行时的[[scope]]<br>函数执行时，会在[[scope]]顶部加上自己的AO<br>函数执行完毕的时候销毁自己的AO</li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;要知道那是最后一次见面，我就穿好看点了&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="js基础" scheme="https://www.buxiaoxing.com/tags/js基础/"/>
    
    <category term="作用域" scheme="https://www.buxiaoxing.com/tags/作用域/"/>
    
  </entry>
  
  <entry>
    <title>js基础-函数</title>
    <link href="https://www.buxiaoxing.com/post/5af6.html"/>
    <id>https://www.buxiaoxing.com/post/5af6.html</id>
    <published>2022-07-26T09:15:08.000Z</published>
    <updated>2022-07-26T09:30:26.375Z</updated>
    
    <content type="html"><![CDATA[<p><strong>只要一想起一生中后悔的事，梅花便落满了南山</strong></p><a id="more"></a><ul><li><p>定义函数</p><ul><li><p>函数声明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function 函数名()&#123;</span><br><span class="line"> 函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>函数表达式(匿名函数表达式)</p><p><code>var 函数名 = function(){函数体}</code></p></li></ul><p><strong>区别</strong></p><ul><li>函数表达式可以直接加()执行</li><li>函数声明整体提前，函数表达式声明提前</li></ul></li><li><p>调用函数</p><p><code>函数名()</code></p></li><li><p>参数</p><ul><li><p>js不定参数  </p><ul><li>形参个数&gt;实参个数<br>后面的参数为undefined</li><li>实参个数&gt;形参个数<br>只取前面的形参</li></ul></li><li><p>函数名.length     -&gt;      形参个数</p></li><li><p>aguments  实参列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">里面装有所有的实参，就算这个实参没有被接收(实参个数&gt;形参个数)</span><br><span class="line">aguments.callee返回函数引用</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li>return <ul><li>终止函数</li><li>返回值 -&gt; 将值返回到函数外部</li></ul></li><li>递归<ul><li>找规律</li><li>找出口<br><strong>递归只能让代码更简洁，空间时间复杂度更高</strong></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;只要一想起一生中后悔的事，梅花便落满了南山&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="js基础" scheme="https://www.buxiaoxing.com/tags/js基础/"/>
    
  </entry>
  
  <entry>
    <title>js基础-typeof与类型转化</title>
    <link href="https://www.buxiaoxing.com/post/e2f7.html"/>
    <id>https://www.buxiaoxing.com/post/e2f7.html</id>
    <published>2022-07-26T08:37:50.000Z</published>
    <updated>2022-07-26T09:29:29.047Z</updated>
    
    <content type="html"><![CDATA[<p><strong>是谁多事种了芭蕉，风也萧萧，雨也萧萧。是君心绪太无聊，种了芭蕉，又怨芭蕉</strong></p><a id="more"></a><ol><li><p>typeof(数据)</p><ul><li><p>返回数据类型<br><code>number string object boolean undefined function</code></p></li><li><p>typeof(未定义的变量，定义未赋值的变量)  -&gt;  undefined</p></li><li><p>返回的字符串</p></li></ul></li><li><p>Number(数据) -&gt; 将数据转化为number类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Number(true)-&gt;1</span><br><span class="line">Number(null)-&gt;0</span><br><span class="line">Number(undefined)-&gt; NaN</span><br><span class="line">Number(&quot;a&quot;)-&gt;NaN</span><br><span class="line">Number(&quot;11a&quot;)-&gt;NaN</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>parseInt(数据,[进制]) -&gt; 将数据化为整数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">parseInt(true)-&gt;NaN</span><br><span class="line">parseInt(null)-&gt;NaN</span><br><span class="line">parseInt(undefined)-&gt; NaN</span><br><span class="line">parseInt(&quot;a&quot;)-&gt;NaN</span><br><span class="line">parseInt(&quot;11a&quot;)-&gt;11//从不包括小数点数字位看到非数字位</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>parseFloat(数据)    -&gt;  将数据化为浮点数</p><blockquote><p>从包括小数点的数字位看到非数字位</p></blockquote></li><li><p>String(数据)  - &gt; 将数据化为字符串类型</p></li><li><p>Boolean(数据)</p></li><li><p>数据.toString([进制])</p><p>将数据转化为字符串类型(undefined和null不能使用，因为原型上没有Object.prototype，String()都能适用)</p><blockquote><p>parseInt()        目标进制 -&gt; 十进制<br>toString()        十进制   -&gt; 目标进制</p></blockquote></li><li><p>隐式类型转化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">       i.isNaN(数据)</span><br><span class="line">(1).Number(数据)</span><br><span class="line">(2).和NaN比对</span><br><span class="line"></span><br><span class="line">ii.a+++a-a ++a a-- --a</span><br><span class="line">(1).Number(a)</span><br><span class="line">(2).a++</span><br><span class="line">iii.- * / %</span><br><span class="line">(1).Number()</span><br><span class="line">(2).运算</span><br><span class="line">iiii.+</span><br><span class="line">计算到字符串时字符串链接</span><br><span class="line">boolean+number = Number(boolean)+number</span><br><span class="line">|| &amp;&amp; !</span><br><span class="line">自动转化为boolean值</span><br><span class="line">== !=</span><br><span class="line">自动类型转化</span><br><span class="line">&gt; &lt; a.字符串与number比，字符串-&gt;number，比较值</span><br><span class="line">b.数字与boolean比较，boolean--&gt;number</span><br><span class="line">c.字符串与字符串比较第一位ASCII值</span><br><span class="line">d.其他比较都返回false</span><br><span class="line"></span><br><span class="line">NaN == NaN-&gt;false</span><br><span class="line">NaN与任何值比较都返回false</span><br></pre></td></tr></table></figure></li></ol><ol start="9"><li><p>不发生类型转化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">===         !==</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;是谁多事种了芭蕉，风也萧萧，雨也萧萧。是君心绪太无聊，种了芭蕉，又怨芭蕉&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="js基础" scheme="https://www.buxiaoxing.com/tags/js基础/"/>
    
    <category term="类型" scheme="https://www.buxiaoxing.com/tags/类型/"/>
    
  </entry>
  
  <entry>
    <title>js基础-条件循环语句</title>
    <link href="https://www.buxiaoxing.com/post/9bb8.html"/>
    <id>https://www.buxiaoxing.com/post/9bb8.html</id>
    <published>2022-07-26T08:35:53.000Z</published>
    <updated>2022-07-26T09:30:07.209Z</updated>
    
    <content type="html"><![CDATA[<p><strong>迎面走来一个很像你的人，我期待是你，又害怕是你，在看清不是你之后，庆幸不是你，又遗憾不是你</strong></p><a id="more"></a><ul><li><p>条件语句</p><p>if/else</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if(条件1)&#123;</span><br><span class="line">    满足条件执行的语句</span><br><span class="line">&#125;else if(条件2)&#123;</span><br><span class="line">    满足条件2执行的语句</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    上面条件都不满足才会执行的语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>  <strong>else if 条件互斥时才能使用</strong></p><p>  switch</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">switch(value)&#123;</span><br><span class="line">case 1:</span><br><span class="line">语句1;</span><br><span class="line">break;</span><br><span class="line">case 2:</span><br><span class="line">语句2;</span><br><span class="line">break;</span><br><span class="line">case 3:</span><br><span class="line">语句3;</span><br><span class="line">break;</span><br><span class="line">default:</span><br><span class="line">都不满足输出的语句;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>循环</p><ul><li><p>for</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">for(1;2;3)&#123;</span><br><span class="line">循环语句</span><br><span class="line">&#125;</span><br><span class="line">for循环执行顺序</span><br><span class="line">先执行一遍1;</span><br><span class="line">判断2执行语句</span><br><span class="line">执行3</span><br><span class="line">判断2执行语句</span><br><span class="line">执行3</span><br><span class="line">....</span><br><span class="line">2为false时终止程序</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>while</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   while(条件)&#123;</span><br><span class="line">循环语句</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">do&#123;</span><br><span class="line">循环语句</span><br><span class="line">&#125;while(条件)</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>break,continue  </p><ul><li>break:跳出循环(多个循环，跳出最近的循环)</li><li>continue:跳出本次循环，不执行后面的语句，直接开始下一次循环</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;迎面走来一个很像你的人，我期待是你，又害怕是你，在看清不是你之后，庆幸不是你，又遗憾不是你&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="js基础" scheme="https://www.buxiaoxing.com/tags/js基础/"/>
    
  </entry>
  
  <entry>
    <title>js基础-运算符</title>
    <link href="https://www.buxiaoxing.com/post/5fde.html"/>
    <id>https://www.buxiaoxing.com/post/5fde.html</id>
    <published>2022-07-26T08:34:56.000Z</published>
    <updated>2022-07-26T09:29:39.539Z</updated>
    
    <content type="html"><![CDATA[<p><strong>后来我才知道，她不是我的花，但能途径她的盛放，我不胜荣幸</strong></p><a id="more"></a><ul><li><p>算术运算符</p><ul><li><p><code>+</code></p><ul><li>数值相加</li><li>字符串链接(任意 + 字符串 = 字符串)</li></ul></li><li><p><code>-</code></p></li><li><p><code>*</code></p></li><li><p><code>/</code></p></li><li><p><code>%</code> 取余</p></li><li><p><code>+= -= *= /= %= ++ --...</code></p></li><li><p>交换两个变量的值</p><ol><li><p>引入第三个变量  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var a = 123;</span><br><span class="line">var b = 234;</span><br><span class="line">var c = a;</span><br><span class="line">a = b;</span><br><span class="line">b = c;</span><br></pre></td></tr></table></figure></li></ol></li></ul></li></ul><pre><code>2. 算术运算   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var a=123;</span><br><span class="line">var b=234;</span><br><span class="line">a=a+b;</span><br><span class="line">b=a-b;</span><br><span class="line">a=a-b;</span><br></pre></td></tr></table></figure></code></pre><ul><li>比较运算符</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;后来我才知道，她不是我的花，但能途径她的盛放，我不胜荣幸&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="js基础" scheme="https://www.buxiaoxing.com/tags/js基础/"/>
    
  </entry>
  
  <entry>
    <title>免费的ssl证书</title>
    <link href="https://www.buxiaoxing.com/post/b320.html"/>
    <id>https://www.buxiaoxing.com/post/b320.html</id>
    <published>2022-07-25T09:01:24.000Z</published>
    <updated>2022-07-26T06:57:09.807Z</updated>
    
    <content type="html"><![CDATA[<p><strong>天生我材必有用，千金散尽还复来</strong></p><a id="more"></a><ul><li><p>证书购买</p><p>使用的是阿里云的SSL证书服务，具体参照下面的教程<br><a href="https://developer.aliyun.com/article/875508?spm=5176.21213303.J_6704733920.15.1b1753c9yTaqcs&scm=20140722.S_community%40%40%E6%96%87%E7%AB%A0%40%40875508._.ID_community%40%40%E6%96%87%E7%AB%A0%40%40875508-RL_ssl%E5%85%8D%E8%B4%B9%E8%AF%81%E4%B9%A6-LOC_main-OR_ser-V_2-P0_3" target="_blank" rel="noopener">阿里云ssl免费证书获取</a></p></li><li><p>我申请证书的主要是因为Chrome无法访问到我在七牛云上配置的图库，导致博客内的图片无法加载，其中的主要原因就是Chrome版本81开始对混合内容进行警告，83开始阻止混合内容的加载和下载，</p><p>简单说就是网站用的https访问，图片却是使用http加载的。于是这里Chrome会做一件事：自动将http加载的数据升格成https进行加载，但是我们知道如果没有配置证书，使用https是没法加载图片的。于是出现了Console中一堆的红色报错<code>Failed to load resource: net::ERR_CERT_COMMON_NAME_INVALI</code>,即<code>资源加载失败，证书错误</code>。</p></li><li><p>证书拿到后将证书下载下来</p> <img src="https://img.buxiaoxing.com/uPic/2022/07/25171312-AipKS6-image-20220725171310937.png" alt="image-20220725171310937" style="zoom: 33%;"></li><li><p>其中包含两个文件</p><p> <img src="http://img.buxiaoxing.com/uPic/2022/07/25171408-CL1ZlZ-image-20220725171406704.png" alt="image-20220725171406704"></p></li><li><p>然后上传到平台上就行，我这边使用的是七牛云，其他平台应该也是大同小异</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25171520-AVB0Ul-image-20220725171518574.png" alt="image-20220725171518574"></p></li><li><p>备注名随便填，将下载的两个文件的内容分别填入</p><ul><li>*.pem–&gt;证书内容</li><li>*.key—&gt;证书密钥</li></ul></li><li><p>然后部署，托管就行了</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;天生我材必有用，千金散尽还复来&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="SSL" scheme="https://www.buxiaoxing.com/tags/SSL/"/>
    
    <category term="https" scheme="https://www.buxiaoxing.com/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>js基础-错误</title>
    <link href="https://www.buxiaoxing.com/post/e4b.html"/>
    <id>https://www.buxiaoxing.com/post/e4b.html</id>
    <published>2022-07-25T07:25:40.000Z</published>
    <updated>2022-07-26T06:57:09.800Z</updated>
    
    <content type="html"><![CDATA[<p><strong>我知道你总有一天会想我</strong></p><a id="more"></a><ul><li><p>错误分两种</p><ul><li>低级错误(语法解析错误)<br>程序在执行前会扫面所有代码，看是否有语法错误，如果有语法错误，代码一行也不会执行<br>一个代码块的语法错误不会影响另一个代码块的运行，代码块：一个script标签，不同代码块能互相应用变量</li><li>逻辑错误<br>执行到该行报错，后面的代码不会执行</li></ul></li><li><p><code>Error</code> 实例对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> err = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"出错了"</span>)</span><br><span class="line"><span class="comment">//这个对象有3个属性</span></span><br><span class="line"><span class="comment">//1. message错误提示信息</span></span><br><span class="line"><span class="comment">//2. name错误名称</span></span><br><span class="line"><span class="comment">//3. stack错误的堆栈</span></span><br></pre></td></tr></table></figure><ul><li><p>原生错误类型</p><ul><li><p><code>SyntaxError</code>    </p><p>语法错误</p></li><li><p><code>ReferenceError</code>     </p><p>引用不存在变量</p></li><li><p><code>RangeError</code></p><p>值超出有效范围，数组长度，Number值的范围，函数堆栈</p></li><li><p><code>TypeError</code></p><p>类型错误</p></li><li><p><code>URIError</code></p><p>URI相关函数的参数不正确</p></li><li><p><code>EvalError</code></p><p><code>eval</code> 函数没有被正确的执行</p></li></ul></li><li><p>自定义错误</p><p>继承 Error对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myError.prototype = <span class="keyword">new</span> <span class="built_in">Error</span>()</span><br></pre></td></tr></table></figure></li><li><p><code>throw</code></p><p>手动中断程序执行，抛出一个错误</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'出错了'</span>)</span><br></pre></td></tr></table></figure></li><li><p><code>try……catch</code></p><p>出现错误，对错误进行处理，程序不会中断</p></li><li><p><code>finally</code></p><p>可以在 <code>try……catch</code> 后添加 <code>finally</code> 代码块，不管是否出现错误，最后都会执行的语句</p></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;我知道你总有一天会想我&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="js" scheme="https://www.buxiaoxing.com/tags/js/"/>
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
  </entry>
  
  <entry>
    <title>js基础-数据类型</title>
    <link href="https://www.buxiaoxing.com/post/6f0e.html"/>
    <id>https://www.buxiaoxing.com/post/6f0e.html</id>
    <published>2022-07-25T07:22:54.000Z</published>
    <updated>2022-07-26T06:57:09.799Z</updated>
    
    <content type="html"><![CDATA[<p><strong>天下万般兵刃，唯有过往伤人最深</strong></p><a id="more"></a><h5 id="原始值"><a href="#原始值" class="headerlink" title="原始值"></a>原始值</h5><ul><li><p>Number  </p><p>var age = 18;<br>var money = 100.1;</p></li><li><p>Boolean</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">true</span><br><span class="line">false</span><br></pre></td></tr></table></figure></li><li><p>String  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var str1 = &apos;hello&apos;</span><br><span class="line">var str2 = &quot;world&quot;</span><br></pre></td></tr></table></figure></li><li><p>undefined<br>声明未赋值的变量</p></li><li><p>null<br>空值，占位  </p></li><li><p><strong>原始值是存入栈空间里面的(先进后出)</strong></p> <img src="http://img.buxiaoxing.com/uPic/2022/07/25164551-b8zMvc-image-20220725164549846.png" alt="image-20220725164549846" style="zoom: 33%;"></li></ul><h5 id="引用值"><a href="#引用值" class="headerlink" title="引用值"></a>引用值</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array</span><br><span class="line">Object</span><br><span class="line">function</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>引用值存入堆里面</strong><br><img src="http://img.buxiaoxing.com/uPic/2022/07/25164519-k4uiNI-image-20220725164518244.png" alt="image-20220725164518244" style="zoom: 33%;"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;天下万般兵刃，唯有过往伤人最深&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="js" scheme="https://www.buxiaoxing.com/tags/js/"/>
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
  </entry>
  
  <entry>
    <title>js变量</title>
    <link href="https://www.buxiaoxing.com/post/ba5b.html"/>
    <id>https://www.buxiaoxing.com/post/ba5b.html</id>
    <published>2022-07-25T07:19:07.000Z</published>
    <updated>2022-07-26T06:57:09.798Z</updated>
    
    <content type="html"><![CDATA[<p><strong>天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数</strong></p><a id="more"></a><ul><li><p>变量声明</p><p><code>var a</code></p></li><li><p>变量赋值</p><p><code>a = 1</code></p></li><li><p>声明变量并赋值</p><p><code>var h1=1,h2=2,h3=3</code></p></li><li><p>变量命名</p><ul><li>必须是数字、字母、下滑线、$组成；并且不能以数字开头</li><li>变量名不能是关键字、保留字</li><li>变量名语义化</li><li>驼峰命名法    <code>userName</code></li></ul></li><li><p>变量名是区分大小写的</p><p><code>var name,Name;</code><br>name和Name是两个变量</p></li><li><p>变量重名后面的值会覆盖前面的值</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="js" scheme="https://www.buxiaoxing.com/tags/js/"/>
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
  </entry>
  
  <entry>
    <title>js基础-js引入</title>
    <link href="https://www.buxiaoxing.com/post/9add.html"/>
    <id>https://www.buxiaoxing.com/post/9add.html</id>
    <published>2022-07-25T07:17:57.000Z</published>
    <updated>2022-07-26T06:57:09.799Z</updated>
    
    <content type="html"><![CDATA[<p><strong>穷且益坚，不坠青云之志；老当益壮，宁移白首之心</strong></p><a id="more"></a><ol><li><p>内部引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">js代码</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>外部引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js文件路径"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>script标签的位置<ul><li>语法而言script&gt;标签可以放在head下面，也可以放在body下面</li><li>就效率而言，推荐script标签放在body最后<br><strong>注意：要获取html中的dom元素，script必须放在该dom元素的后面(页面按顺序加载，或者代码在页面加载完后执行)</strong></li></ul></li><li><code>defer</code> 和 <code>async</code><ul><li>同：都是异步加载 js 文件</li><li>异：<ul><li><code>async</code>：没有执行顺序，谁先下载完就先执行谁，并停止页面的渲染</li><li><code>defer</code>：有执行顺序，下载完成后也要等到页面渲染完成才执行</li></ul></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;穷且益坚，不坠青云之志；老当益壮，宁移白首之心&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="js" scheme="https://www.buxiaoxing.com/tags/js/"/>
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
  </entry>
  
  <entry>
    <title>express+mysql</title>
    <link href="https://www.buxiaoxing.com/post/a9d1.html"/>
    <id>https://www.buxiaoxing.com/post/a9d1.html</id>
    <published>2022-07-25T07:06:06.000Z</published>
    <updated>2022-07-26T06:57:09.805Z</updated>
    
    <content type="html"><![CDATA[<p><strong>杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭</strong></p><a id="more"></a><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19150949-4qIZrS-image-20220719150947386.png" alt="image-20220719150947386"></p><h4 id="安装与配置mysql模块"><a href="#安装与配置mysql模块" class="headerlink" title="安装与配置mysql模块"></a>安装与配置mysql模块</h4><ul><li><p>安装mysql模块</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19151058-9PlvNa-image-20220719151055731.png" alt="image-20220719151055731"></p></li><li><p>配置mysql模块</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19151133-hgAfY9-image-20220719151131981.png" alt="image-20220719151131981"></p></li><li><p>测试mysql是否正常工作</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19152044-9pfv31-image-20220719152042516.png" alt="image-20220719152042516"></p><ul><li><p>默认端口为3306可以通过port属性指定端口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> db = mysql.createPool(&#123;</span><br><span class="line">  host: <span class="string">'124.223.225.150'</span>,</span><br><span class="line">  port: <span class="string">'3307'</span>,</span><br><span class="line">  user: <span class="string">'root'</span>,</span><br><span class="line">  password: <span class="string">'root'</span>,</span><br><span class="line">  database: <span class="string">'my_db_01'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>如果测试报错</p><p><code>ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client</code></p><p>在mysql的命令行执行</p><p><code>ALTER USER &#39;root&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;</code></p></li></ul></li></ul><h4 id="使用myql操作数据库"><a href="#使用myql操作数据库" class="headerlink" title="使用myql操作数据库"></a>使用myql操作数据库</h4><ul><li><p>查询数据</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19153953-t40H05-image-20220719153952299.png" alt="image-20220719153952299"></p></li><li><p>插入数据</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19154330-ymqBv4-image-20220719154329294.png" alt="image-20220719154329294"></p><p><strong>快速插入数据</strong></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19155327-kys86S-image-20220719155326041.png" alt="image-20220719155326041"></p></li><li><p>更新数据</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19155738-I6yAtP-image-20220719155735471.png" alt="image-20220719155735471"></p><p><strong>更新数据的便捷方式</strong></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19160258-n1QzyA-image-20220719160256703.png" alt="image-20220719160256703"></p></li><li><p>删除数据</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19160507-7s2yEa-image-20220719160505613.png" alt="image-20220719160505613"></p></li><li><p>标记删除</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19161114-AcN6ZF-image-20220719161113272.png" alt="image-20220719161113272"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="express" scheme="https://www.buxiaoxing.com/tags/express/"/>
    
    <category term="mysql" scheme="https://www.buxiaoxing.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>web开发模式</title>
    <link href="https://www.buxiaoxing.com/post/e57e.html"/>
    <id>https://www.buxiaoxing.com/post/e57e.html</id>
    <published>2022-07-25T06:59:22.000Z</published>
    <updated>2022-07-26T06:57:09.801Z</updated>
    
    <content type="html"><![CDATA[<p><strong>关山难越，谁悲失路之人；萍水相逢相逢，尽是他乡之客</strong></p><a id="more"></a><h3 id="Web开发模式"><a href="#Web开发模式" class="headerlink" title="Web开发模式"></a>Web开发模式</h3><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19162300-sOFguR-image-20220719162258025.png" alt="image-20220719162258025"></p><h4 id="服务端渲染开发模式"><a href="#服务端渲染开发模式" class="headerlink" title="服务端渲染开发模式"></a>服务端渲染开发模式</h4><ul><li><p>概念</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19162454-MBCvop-image-20220719162453442.png" alt="image-20220719162453442"></p></li><li><p>优缺点</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19162602-bmJ3Ew-image-20220719162601090.png" alt="image-20220719162601090"></p></li></ul><h4 id="前后端分离的开发模式"><a href="#前后端分离的开发模式" class="headerlink" title="前后端分离的开发模式"></a>前后端分离的开发模式</h4><ul><li><p>概念</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19162654-HFSq8k-image-20220719162652214.png" alt="image-20220719162652214"></p></li><li><p>优缺点</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19162811-bOaflt-image-20220719162809588.png" alt="image-20220719162809588"></p></li></ul><h4 id="如何选择web开发模式"><a href="#如何选择web开发模式" class="headerlink" title="如何选择web开发模式"></a>如何选择web开发模式</h4><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19163008-XyyBI0-image-20220719163006984.png" alt="image-20220719163006984"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;关山难越，谁悲失路之人；萍水相逢相逢，尽是他乡之客&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="SEO" scheme="https://www.buxiaoxing.com/tags/SEO/"/>
    
    <category term="SSR" scheme="https://www.buxiaoxing.com/tags/SSR/"/>
    
  </entry>
  
  <entry>
    <title>前后端身份认证</title>
    <link href="https://www.buxiaoxing.com/post/a30f.html"/>
    <id>https://www.buxiaoxing.com/post/a30f.html</id>
    <published>2022-07-25T06:55:02.000Z</published>
    <updated>2022-07-26T06:57:09.806Z</updated>
    
    <content type="html"><![CDATA[<p><strong>我差一点就碰到月亮了，可惜天却亮了</strong></p><a id="more"></a><h3 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ul><li><p>什么是身份认证</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25145803-U0Av5e-19163126-O0Cn5B-image-20220719163124154.png" alt="image-20220719163124154"></p></li><li><p>为什么需要身份认证</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19163256-C5x2az-image-20220719163254643.png" alt="image-20220719163254643"></p></li><li><p>不同开发模式下的身份认证</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19163330-zQcos2-image-20220719163324011.png" alt="image-20220719163324011"></p></li></ul><h4 id="session认证机制"><a href="#session认证机制" class="headerlink" title="session认证机制"></a>session认证机制</h4><ul><li><p>http协议的无状态性</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19163519-9V4tX5-image-20220719163517712.png" alt="image-20220719163517712"></p></li><li><p>如何突破http无状态的限制</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19163642-asxBvp-image-20220719163641042.png" alt="image-20220719163641042"></p></li><li><p>Cookie</p><ul><li><p>什么是cookie</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19164106-mprtAf-image-20220719164105483.png" alt="image-20220719164105483"></p></li><li><p>cookie在身份认证中的作用</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19164302-QqhCs5-image-20220719164300591.png" alt="image-20220719164300591"></p></li><li><p>cookie不具有安全性</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19164635-HPpBuz-image-20220719164633252.png" alt="image-20220719164633252"></p></li><li><p>提高身份认证安全性</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19164757-edIhUV-image-20220719164755788.png" alt="image-20220719164755788"></p></li><li><p>session工作原理</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19165013-eSs8pt-image-20220719165010992.png" alt="image-20220719165010992"></p></li></ul></li></ul><h4 id="express中使用session认证"><a href="#express中使用session认证" class="headerlink" title="express中使用session认证"></a>express中使用session认证</h4><ul><li><p>安装中间件 express-session</p><p><code>npm i express-session</code></p></li><li><p>配置express-session中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19170255-UkIfMn-image-20220719170253995.png" alt="image-20220719170253995"></p></li><li><p>向session中存数据</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19170714-S0y17S-image-20220719170712930.png" alt="image-20220719170712930"></p></li><li><p>从session中取数据</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19171122-VkrwkN-image-20220719171119555.png" alt="image-20220719171119555"></p></li><li><p>清空session</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/19171435-lpnmtW-image-20220719171433524.png" alt="image-20220719171433524"></p></li></ul><h4 id="JWT认证机制"><a href="#JWT认证机制" class="headerlink" title="JWT认证机制"></a>JWT认证机制</h4><ul><li><p>session认证机制的局限性</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20095009-NGyerG-image-20220720095006099.png" alt="image-20220720095006099"></p></li><li><p>什么是 JWT</p><p>JWT(Json Web Token)，是目前最流行的跨域认证方案</p></li><li><p>JWT工作原理</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20095258-TW5BEA-image-20220720095252498.png" alt="image-20220720095252498"></p></li><li><p>JWT组成部分</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20095427-75QYiZ-image-20220720095426079.png" alt="image-20220720095426079"></p></li><li><p>三个部分各自的含义</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20095521-MY1UFp-image-20220720095519121.png" alt="image-20220720095519121"></p></li><li><p>JWT使用方式</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20095647-hg3fot-image-20220720095645939.png" alt="image-20220720095645939"></p></li></ul><h4 id="Express中使用JWT"><a href="#Express中使用JWT" class="headerlink" title="Express中使用JWT"></a>Express中使用JWT</h4><ul><li><p>安装JWT包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20095756-ACsdOz-image-20220720095754562.png" alt="image-20220720095754562"></p></li><li><p>导入包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20095820-8jKs71-image-20220720095818427.png" alt="image-20220720095818427"></p></li><li><p>定义secret密钥</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20100203-6rHFr2-image-20220720100201507.png" alt="image-20220720100201507"></p></li><li><p>登陆成功后生成JWT字符串</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20100344-krlrDe-image-20220720100342542.png" alt="image-20220720100342542"></p></li><li><p>将 jwt 字符串还原成 json 对象</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20101059-Bc6DOL-image-20220720101058352.png" alt="image-20220720101058352"></p></li><li><p>使用req.user获取用户信息</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20101815-ga2p4a-image-20220720101814474.png" alt="image-20220720101814474"></p></li><li><p>捕获解析 JWT 失败后产生的错误</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/20103805-eiIUJs-image-20220720103804090.png" alt="image-20220720103804090"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;我差一点就碰到月亮了，可惜天却亮了&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="jwt" scheme="https://www.buxiaoxing.com/tags/jwt/"/>
    
    <category term="cookie" scheme="https://www.buxiaoxing.com/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>express</title>
    <link href="https://www.buxiaoxing.com/post/711.html"/>
    <id>https://www.buxiaoxing.com/post/711.html</id>
    <published>2022-07-25T06:46:37.000Z</published>
    <updated>2022-07-26T06:57:09.805Z</updated>
    
    <content type="html"><![CDATA[<p><strong>关于你的记忆，就像18岁那年的蝉鸣，点燃了整个夏天，却又消无声息的湮灭</strong></p><a id="more"></a><h4 id="Express简介"><a href="#Express简介" class="headerlink" title="Express简介"></a>Express简介</h4><ul><li><p>什么是Express</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144904-yeUVyx-15153906-fOAZ89-image-20220715153905228.png" alt="image-20220715153905228"></p></li><li><p>进一步理解Express</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144913-DXyLCz-15154021-53Uxjc-image-20220715154020043.png" alt="image-20220715154020043"></p></li><li><p>Express能做什么</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144921-K9qaEm-15154118-6EwCqU-image-20220715154116658.png" alt="image-20220715154116658"></p></li></ul><h4 id="Express基本使用"><a href="#Express基本使用" class="headerlink" title="Express基本使用"></a>Express基本使用</h4><ul><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i express@4.17.1</span><br></pre></td></tr></table></figure></li><li><p>创建最基本的web服务器</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144926-r10y4L-15154316-q2R9GE-image-20220715154315034.png" alt="image-20220715154315034"></p></li><li><p>监听Get请求</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144931-xWMURa-15154930-ST8hUV-image-20220715154928751.png" alt="image-20220715154928751"></p></li><li><p>监听Post请求</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144939-0P4XEA-15154954-keF3ru-image-20220715154953068.png" alt="image-20220715154953068"></p></li><li><p>把内容响应给客户端</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144944-nxMXFr-15155055-miL1B6-image-20220715155053801.png" alt="image-20220715155053801"></p></li><li><p>获取URL中携带的查询参数</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144949-QqzMcy-15155452-qbdIcz-image-20220715155450858.png" alt="image-20220715155450858"></p></li><li><p>获取URL中的动态参数</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144955-1yhTIH-15155820-2GMNk9-image-20220715155818997.png" alt="image-20220715155818997"></p></li></ul><h4 id="托管静态资源"><a href="#托管静态资源" class="headerlink" title="托管静态资源"></a>托管静态资源</h4><ul><li><p>express.static()</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15160451-VDoOdD-image-20220715160450570.png" alt="image-20220715160450570"></p></li><li><p>托管多个静态资源目录</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15161257-0AV1IN-image-20220715161255655.png" alt="image-20220715161255655"></p></li><li><p>挂载路径前缀</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15161446-UqMsxc-image-20220715161444860.png" alt="image-20220715161444860"></p></li></ul><h4 id="nodemon"><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h4><ul><li><p>为什么使用nodemon</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15161757-1r2K0Q-image-20220715161755523.png" alt="image-20220715161755523"></p></li><li><p>安装nodemon</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i nodemon -g</span><br></pre></td></tr></table></figure></li><li><p>使用nodemon</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15161939-XfrMHP-image-20220715161938250.png" alt="image-20220715161938250"></p></li></ul><h4 id="express路由"><a href="#express路由" class="headerlink" title="express路由"></a>express路由</h4><ul><li><p>路由的概念</p><ul><li><p>生活中的路由</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15162218-kajbjY-image-20220715162216947.png" alt="image-20220715162216947"></p></li><li><p>Express 中的路由</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15162441-FeJKHH-image-20220715162440325.png" alt="image-20220715162440325"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15162455-sSkY7n-image-20220715162454145.png" alt="image-20220715162454145"></p></li><li><p>路由的匹配过程</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15162800-8JhvMZ-image-20220715162758368.png" alt="image-20220715162758368"></p></li><li><p>模块化路由</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15163056-qpRMCO-image-20220715163054750.png" alt="image-20220715163054750"></p><ul><li><p>创建路由模块</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15163134-5z4JDX-image-20220715163126892.png" alt="image-20220715163126892"></p></li><li><p>注册路由模块</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15163614-m0PI4n-image-20220715163613304.png" alt="image-20220715163613304"></p></li><li><p>app.use()</p><p>注册全局中间件，这里的router和前面的static都是中间件</p></li><li><p>为路由模块添加前缀</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15164255-VRNzpi-image-20220715164253908.png" alt="image-20220715164253908"></p></li></ul></li></ul></li></ul><h4 id="express中间件"><a href="#express中间件" class="headerlink" title="express中间件"></a>express中间件</h4><ul><li><p>什么是中间件</p><p>中间件(Middleware)，特指业务流程的<code>中间处理环节</code></p><ul><li><p>现实中的例子</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15164634-JaG2C7-image-20220715164632920.png" alt="image-20220715164632920"></p></li></ul></li><li><p>express中间件调用流程</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15164734-m08cBj-image-20220715164733660.png" alt="image-20220715164733660"></p></li></ul><ul><li><p>express中间件格式</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15165057-uP91PS-image-20220715165055802.png" alt="image-20220715165055802"></p></li><li><p>next函数作用</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15165223-jQqpVY-image-20220715165221756.png" alt="image-20220715165221756"></p></li><li><p>定义中间件函数</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15165330-5GmnpW-image-20220715165329865.png" alt="image-20220715165329865"></p></li><li><p>全局生效的中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15165649-JM4vki-image-20220715165648380.png" alt="image-20220715165648380"></p></li><li><p>定义全局中间件的简化形式</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15170232-LzjAnJ-image-20220715170230804.png" alt="image-20220715170230804"></p></li><li><p>中间件的作用</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15170518-igccsx-image-20220715170516920.png" alt="image-20220715170516920"></p></li><li><p>定义多个全局中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15171024-yXUMuI-image-20220715171023312.png" alt="image-20220715171023312"></p></li><li><p>局部生效的中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15171357-dzgFYv-image-20220715171356413.png" alt="image-20220715171356413"></p></li><li><p>定义多个局部中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/15171730-l2qtAH-image-20220715171729504.png" alt="image-20220715171729504"></p></li><li><p>中间件使用的5个注意事项</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18095638-yUUvdZ-image-20220718095637386.png" alt="image-20220718095637386"></p></li><li><p>中间件的分类</p><p> <img src="http://img.buxiaoxing.com/uPic/2022/07/18095800-5Vlnen-image-20220718095758842.png" alt="image-20220718095758842"></p></li><li><p>应用级别中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18095844-jzD0LW-image-20220718095842711.png" alt="image-20220718095842711"></p></li><li><p>路由级别中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18100000-TQOmLZ-image-20220718095959079.png" alt="image-20220718095959079"></p></li><li><p>错误级别中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18100132-jpVvat-image-20220718100131119.png" alt="image-20220718100131119"></p></li><li><p>express 内置的中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18104841-R9G5p2-image-20220718104840412.png" alt="image-20220718104840412"></p></li><li><p>第三方中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18112204-im0lx1-image-20220718112203572.png" alt="image-20220718112203572"></p></li><li><p>自定义中间件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18112350-SRpd8U-image-20220718112348419.png" alt="image-20220718112348419"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18142349-3pPzHh-image-20220718142348344.png" alt="image-20220718142348344"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18113132-bkLCJt-image-20220718113130433.png" alt="image-20220718113130433"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18113741-voXkal-image-20220718113739745.png" alt="image-20220718113739745"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18114040-CSxyJ1-image-20220718114039354.png" alt="image-20220718114039354"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18142508-oq8cvp-image-20220718142506904.png" alt="image-20220718142506904"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18142921-K7sMTJ-image-20220718142919506.png" alt="image-20220718142919506"></p></li></ul><h4 id="使用express写接口"><a href="#使用express写接口" class="headerlink" title="使用express写接口"></a>使用express写接口</h4><ul><li><p>创建基本的web服务器</p></li><li><p>注册路由模块</p></li><li><p>编写GET请求</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18152441-H1FXEk-image-20220718152440136.png" alt="image-20220718152440136"></p></li><li><p>编写POST请求</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18153029-4lH3CM-image-20220718153027758.png" alt="image-20220718153027758"></p></li><li><p>CORS跨域共享</p><ul><li><p>接口的跨域问题</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18154334-RvV4nu-image-20220718154333387.png" alt="image-20220718154333387"></p></li><li><p>使用cors中间件解决跨域问题</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18154443-hLk3YD-image-20220718154442316.png" alt="image-20220718154442316"></p></li></ul></li><li><p>Cors</p><ul><li><p>什么是cors</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18154922-zjIywe-image-20220718154920768.png" alt="image-20220718154920768"></p></li><li><p>cors的注意事项</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155017-iKxjAP-image-20220718155015799.png" alt="image-20220718155015799"></p></li><li><p>cors响应头部 Access-Control-Allow-Origin</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155205-sRaUcA-image-20220718155203821.png" alt="image-20220718155203821"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155243-2ZvIYF-image-20220718155241403.png" alt="image-20220718155241403"></p></li><li><p>cors响应头部 Access-Control-Allow-Origin</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155426-7VBbdE-image-20220718155424641.png" alt="image-20220718155424641"></p></li><li><p>cors响应头部 Access-Control-Allow-Methods</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155525-2bJ7nt-image-20220718155524332.png" alt="image-20220718155524332"></p></li><li><p>cors请求分类</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155627-wj9pOJ-image-20220718155625543.png" alt="image-20220718155625543"></p><ul><li><p>简单请求</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155655-DVhAkr-image-20220718155653201.png" alt="image-20220718155653201"></p></li><li><p>预检请求</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155835-r5MOPO-image-20220718155834169.png" alt="image-20220718155834169"></p></li><li><p>简单请求与预检请求的区别</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18155924-C5Pvbw-image-20220718155922671.png" alt="image-20220718155922671"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18160952-uDoB9k-image-20220718160950587.png" alt="image-20220718160950587"></p></li></ul></li></ul></li><li><p>jsonp</p><ul><li><p>概念与特点</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18161122-xUfIFj-image-20220718161121457.png" alt="image-20220718161121457"></p></li><li><p>创建jsonp接口注意事项</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18161240-PCNjFP-image-20220718161239658.png" alt="image-20220718161239658"></p></li><li><p>实现jsonp接口步骤</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18161421-gueo9O-image-20220718161419127.png" alt="image-20220718161419127"></p></li><li><p>在网页中使用jquery发送JSONP请求</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/18162217-4ctX01-image-20220718162216210.png" alt="image-20220718162216210"></p></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;关于你的记忆，就像18岁那年的蝉鸣，点燃了整个夏天，却又消无声息的湮灭&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="node" scheme="https://www.buxiaoxing.com/tags/node/"/>
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="express" scheme="https://www.buxiaoxing.com/tags/express/"/>
    
  </entry>
  
  <entry>
    <title>npm与包</title>
    <link href="https://www.buxiaoxing.com/post/c377.html"/>
    <id>https://www.buxiaoxing.com/post/c377.html</id>
    <published>2022-07-25T06:36:59.000Z</published>
    <updated>2022-07-26T06:57:09.806Z</updated>
    
    <content type="html"><![CDATA[<p><strong>用你的生活来定义浪漫，不要用浪漫来填充它</strong></p><a id="more"></a><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ul><li><p>什么是包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25143830-ublowa-14175100-Kvq5Jg-image-20220714175059163.png" alt="image-20220714175059163"></p></li><li><p>包的来源</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25143842-W8sKr2-14175154-MrSpan-image-20220714175153137.png" alt="image-20220714175153137"></p></li><li><p>为什么需要包</p><p><img src="/Users/peter/img-bed/25143956-ezIctp-14175319-tarm8J-image-20220714175318444.png" alt="image-20220714175318444"></p></li><li><p>在哪里下载包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144008-5lDlbK-14175607-JiWcHc-image-20220714175606266.png" alt="image-20220714175606266"></p></li></ul><ul><li><p>npm 初次装包后多了那些文件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144030-zeljfl-15102506-reE53v-image-20220715102504900.png" alt="image-20220715102504900"></p></li><li><p>安装指定版本包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144040-lEqREz-15102754-bldc8i-image-20220715102753161.png" alt="image-20220715102753161"></p></li><li><p>包的语义化版本规范</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144049-lv0BEL-15103016-NOz6gM-image-20220715103015133.png" alt="image-20220715103015133"></p></li><li><p>包管理配置文件</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144059-BJJjNL-15103134-ZEvYYx-image-20220715103132932.png" alt="image-20220715103132932"></p></li><li><p>快速创建package.json</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144112-yo9woy-25144107-uD0dVC-15103553-lwhXIa-image-20220715103551857.png" alt="image-20220715103551857"></p></li><li><p>卸载包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144122-o5B19N-15104402-eC7Wti-image-20220715104400938.png" alt="image-20220715104400938"></p></li><li><p>devDependencies</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144227-QbuXZU-15104701-2GSoJs-image-20220715104659836.png" alt="image-20220715104659836"></p><ul><li>可以在npm看安装示例，来确定安装到哪个节点中</li></ul></li><li><p>淘宝NPM镜像服务器</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144237-7pBYZu-15105129-Dv4TpC-image-20220715105128257.png" alt="image-20220715105128257"></p></li><li><p>切换npm下包镜像源</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144241-CVf3N9-15105403-sMZofM-image-20220715105401888.png" alt="image-20220715105401888"></p></li><li><p>全局包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144247-b0NIyc-15110242-mbyNqa-image-20220715110240414.png" alt="image-20220715110240414"></p></li><li><p>I5ting-doc</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144259-QhUtGu-15110833-59fSVb-image-20220715110832034.png" alt="image-20220715110832034"></p></li><li><p>规范的包结构</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144304-v0VAuK-25144250-E6iAyQ-15111130-wHNPAv-image-20220715111128960.png" alt="image-20220715111128960"></p></li></ul><h4 id="开发自己的包"><a href="#开发自己的包" class="headerlink" title="开发自己的包"></a>开发自己的包</h4><ul><li><p>初始化包结构</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144309-r2ZcnT-15113338-yXK9rj-image-20220715113336159.png" alt="image-20220715113336159"></p></li><li><p>初始化package.json</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144314-vOA81x-15113216-l23hl1-image-20220715113215104.png" alt="image-20220715113215104"></p></li><li><p>登陆npm账号</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144320-JBkDll-15145819-EKPc47-image-20220715145818024.png" alt="image-20220715145818024"></p></li><li><p>把包发布到npm上</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144345-FiwfyH-15150058-8mswqC-image-20220715150056995.png" alt="image-20220715150056995"></p></li><li><p>删除已发布的包</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144349-MoEu1L-15150248-9Kp3T1-image-20220715150246910.png" alt="image-20220715150246910"></p></li></ul><h4 id="模块加载机制"><a href="#模块加载机制" class="headerlink" title="模块加载机制"></a>模块加载机制</h4><ul><li><p>优先从缓存中加载</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144355-41D8NB-15151104-Wa5pWS-image-20220715151102266.png" alt="image-20220715151102266"></p></li><li><p>内置模块加载机制</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144400-nlilEm-15151203-qJXgpm-image-20220715151202220.png" alt="image-20220715151202220"></p></li><li><p>自定义模块加载机制</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144404-A0WMnL-15151656-juvJOJ-image-20220715151655183.png" alt="image-20220715151655183"></p></li><li><p>第三方模块的加载机制</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144412-cMNSlt-15151906-pFhHdz-image-20220715151902920.png" alt="image-20220715151902920"></p></li><li><p>目录作为路径加载模块</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25144418-00dAZX-15152216-O4nQiE-image-20220715152214950.png" alt="image-20220715152214950"></p></li></ul><h4 id="npm-常用命令"><a href="#npm-常用命令" class="headerlink" title="npm 常用命令"></a>npm 常用命令</h4>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;用你的生活来定义浪漫，不要用浪漫来填充它&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="前端" scheme="https://www.buxiaoxing.com/tags/前端/"/>
    
    <category term="npm" scheme="https://www.buxiaoxing.com/tags/npm/"/>
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="nodejs" scheme="https://www.buxiaoxing.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>nodejs中的模块化</title>
    <link href="https://www.buxiaoxing.com/post/e508.html"/>
    <id>https://www.buxiaoxing.com/post/e508.html</id>
    <published>2022-07-25T06:29:34.000Z</published>
    <updated>2022-07-26T06:57:09.806Z</updated>
    
    <content type="html"><![CDATA[<p><strong>少年是元气淋漓的颓唐和春心荡漾的忧伤</strong></p><a id="more"></a><h3 id="什么是模块化"><a href="#什么是模块化" class="headerlink" title="什么是模块化"></a>什么是模块化</h3><p>指解决一个复杂问题时，自顶向下逐层把系统划分成若干模块的过程。对于整个系统来说，模块是可组合，分解和更换的单元</p><ul><li><p>编程中的模块化</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142520-005mkX-14142228-qZxZoL-image-20220714142227229.png" alt="image-20220714142227229"></p></li><li><p>模块化规范</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142606-usBX5K-14142147-YgHPPE-image-20220714142145758.png" alt="image-20220714142145758"></p></li></ul><h3 id="Node-js中的模块化"><a href="#Node-js中的模块化" class="headerlink" title="Node.js中的模块化"></a>Node.js中的模块化</h3><h4 id="Node-js中模块的分类"><a href="#Node-js中模块的分类" class="headerlink" title="Node.js中模块的分类"></a>Node.js中模块的分类</h4><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142625-6fnHeA-14150809-7NEHxc-image-20220714150807741.png" alt="image-20220714150807741"></p><h4 id="加载模块"><a href="#加载模块" class="headerlink" title="加载模块"></a>加载模块</h4><ul><li><p>使用 <code>require()</code></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142640-GTNeQe-14150957-nB1UQZ-image-20220714150956206.png" alt="image-20220714150956206"></p><ul><li>加载内置模块和第三方模块都直接写模块名即可</li><li>加载自定义模块需要写路径</li><li>加载其他模块时，会执行被加载模块中的代码</li><li>可以省略 <code>.js</code> 后缀名</li></ul></li></ul><h4 id="模块作用域"><a href="#模块作用域" class="headerlink" title="模块作用域"></a>模块作用域</h4><ul><li><p>什么是模块作用域</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142657-K0RwRA-14165909-AN9Mtv-image-20220714165907279.png" alt="image-20220714165907279"></p></li><li><p>模块作用域的好处</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142718-atalhT-14170045-a5gEgO-image-20220714170037806.png" alt="image-20220714170037806"></p></li></ul><h4 id="向外共享"><a href="#向外共享" class="headerlink" title="向外共享"></a>向外共享</h4><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142744-lUBkBc-14170745-85BzhQ-image-20220714170743884.png" alt="image-20220714170743884"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142758-fp7I9d-14171251-ynNxgo-image-20220714171250096.png" alt="image-20220714171250096"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142810-qkeKR3-14172209-hIFFKc-image-20220714172207506.png" alt="image-20220714172207506"></p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142823-Zf0nX0-14172714-u9dBc8-image-20220714172712318.png" alt="image-20220714172712318"></p><ul><li><p>直接往对象上挂载属性是没有问题的</p></li><li><p>如果直接给对象赋值，exports 就无法导出了，因为exports 的指向改变了，不再指向module.exports指向的对象了</p></li><li><p>为了防止混乱，尽量只使用module.exports</p></li><li><p>Node.js 的模块化规范</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142845-pcCor2-14174837-vFKtap-image-20220714174836121.png" alt="image-20220714174836121"></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;少年是元气淋漓的颓唐和春心荡漾的忧伤&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="nodejs" scheme="https://www.buxiaoxing.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>js与nodejs</title>
    <link href="https://www.buxiaoxing.com/post/ce0e.html"/>
    <id>https://www.buxiaoxing.com/post/ce0e.html</id>
    <published>2022-07-25T06:15:40.000Z</published>
    <updated>2022-07-26T06:57:09.805Z</updated>
    
    <content type="html"><![CDATA[<p><strong>歧视者总是躲在阴暗角落拉帮结派，却终见不得光</strong></p><a id="more"></a><h3 id="浏览器js工作原理"><a href="#浏览器js工作原理" class="headerlink" title="浏览器js工作原理"></a>浏览器js工作原理</h3><ul><li><p>浏览器中js组成部分<img src="http://img.buxiaoxing.com/uPic/2022/07/25142020-Au4Rwe-13110412-lYEIQi-image-20220713110410531.png" alt="image-20220713110410531"></p></li><li><p>浏览器js解释引擎</p><table><thead><tr><th>浏览器</th><th>解释引擎</th></tr></thead><tbody><tr><td>Chrome</td><td>V8</td></tr><tr><td>Firefox</td><td>OdinMonkey(奥丁猴)</td></tr><tr><td>Safari</td><td>JsCore</td></tr><tr><td>IE</td><td>Chakra(查克拉)</td></tr></tbody></table></li><li><p>js怎么操作浏览器api <img src="http://img.buxiaoxing.com/uPic/2022/07/25142115-h7D0cs-13110308-CLMee2-image-20220713110306732.png" alt="image-20220713110306732"></p></li><li><p>浏览器中js运行环境</p><p><img src="http://img.buxiaoxing.com/uPic/2022/07/25142129-hBQvow-13110841-qHjyDS-image-20220713110839731.png" alt="image-20220713110839731"></p><ul><li>V8引擎负责解析和执行JS代码</li><li>内置api是运行环境提供的特殊接口，只能在所属的运行环境中被调用</li></ul></li></ul><h3 id="Node-js工作原理"><a href="#Node-js工作原理" class="headerlink" title="Node.js工作原理"></a>Node.js工作原理</h3><blockquote><p>Node.js 是一个基于Chrome V8 引擎的 JS 运行环境</p></blockquote><ul><li><p><a href="https://nodejs.org" target="_blank" rel="noopener">https://nodejs.org</a></p></li><li><p>Node.js 中的 JS 运行环境 <img src="http://img.buxiaoxing.com/uPic/2022/07/25142146-88vzfI-13112209-XJKD7y-image-20220713112207695.png" alt="image-20220713112207695"></p></li><li><p>Node.js可以做什么</p><ul><li>基于express，构建web应用</li><li>基于Electron，构建跨平台桌面应用</li><li>基于testify，构建 API 接口项目</li><li>读写数据库，创建命令行工具辅助开发，etc… </li></ul></li><li><p>Node学习路径</p><ul><li>JS基础语法+Node.js内置API(fs, path, http等等)+第三方API模块(express, mysql等等)</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;歧视者总是躲在阴暗角落拉帮结派，却终见不得光&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="js" scheme="https://www.buxiaoxing.com/tags/js/"/>
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="nodejs" scheme="https://www.buxiaoxing.com/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号开发</title>
    <link href="https://www.buxiaoxing.com/post/68e9.html"/>
    <id>https://www.buxiaoxing.com/post/68e9.html</id>
    <published>2022-06-10T09:28:52.000Z</published>
    <updated>2022-07-26T06:57:09.807Z</updated>
    
    <content type="html"><![CDATA[<p><strong>醉后不知天在水，满船清梦压星河</strong></p><a id="more"></a><h3 id="微信鉴权"><a href="#微信鉴权" class="headerlink" title="微信鉴权"></a>微信鉴权</h3><p><a href="https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Overview.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Overview.html</a></p><ul><li><p>js接口安全域名</p><p><code>进入公众号后台--&gt;设置与开发--&gt;公众号设置--&gt;功能设置</code></p></li><li><p>ip白名单</p><p><code>设置与开发--&gt;基本配置/安全中心</code></p></li><li><p>启用服务器配置</p><p><code>设置与开发--&gt;基本配置</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">router.get(<span class="string">'/auth'</span>, (req, res)=&gt;&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(req)</span><br><span class="line">  <span class="keyword">let</span> &#123;signature, timestamp, nonce, echostr&#125; = req.query</span><br><span class="line">  <span class="keyword">let</span> token = <span class="string">'peter'</span></span><br><span class="line">  <span class="keyword">let</span> arr = [timestamp, nonce, token]</span><br><span class="line">  arr.sort()  <span class="comment">// 字典排序</span></span><br><span class="line">  <span class="keyword">let</span> str = arr.join(<span class="string">''</span>)</span><br><span class="line">  <span class="keyword">let</span> result = sha1(str) <span class="comment">// sha1加密</span></span><br><span class="line">  <span class="keyword">if</span>(result === signature)&#123;</span><br><span class="line">    res.set(<span class="string">'Content-Type'</span>, <span class="string">'text/plain'</span>)</span><br><span class="line">    res.send(echostr)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    res.send === (<span class="string">'Error!!!'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>jsapi授权</p><ul><li><p>获取appid 和 appsecret</p><p><code>设置与开发基本配置</code></p></li><li><p>获取签名</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; appid, secret &#125; = <span class="built_in">require</span>(<span class="string">'../config/index'</span>)</span><br><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">'axios'</span>)</span><br><span class="line"><span class="keyword">const</span> sha1 = <span class="built_in">require</span>(<span class="string">'sha1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getTicket</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 获取 access_token</span></span><br><span class="line">  <span class="keyword">let</span> tokenUrl = <span class="string">`https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=<span class="subst">$&#123;appid&#125;</span>&amp;secret=<span class="subst">$&#123;secret&#125;</span>`</span></span><br><span class="line">  <span class="keyword">const</span> tokenData = <span class="keyword">await</span> axios.get(tokenUrl)</span><br><span class="line">  <span class="built_in">console</span>.log(tokenData)</span><br><span class="line">  <span class="keyword">const</span> &#123;access_token&#125; = tokenData.data</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取 ticket 签名</span></span><br><span class="line">  <span class="keyword">let</span> ticketUrl = <span class="string">`https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=<span class="subst">$&#123;access_token&#125;</span>&amp;type=jsapi`</span></span><br><span class="line">  <span class="keyword">const</span> ticketData = <span class="keyword">await</span> axios.get(ticketUrl)</span><br><span class="line">  <span class="built_in">console</span>.log(ticketData)</span><br><span class="line">  <span class="keyword">const</span> &#123; ticket &#125; = ticketData.data</span><br><span class="line">  <span class="keyword">return</span> ticket</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> createNonceStr = <span class="function"><span class="params">()</span>=&gt;</span>&#123; <span class="comment">// 生成随机字符串</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substring(<span class="number">2</span>,<span class="number">15</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> createTimestamp = <span class="function"><span class="params">()</span>=&gt;</span>&#123; <span class="comment">// 生成时间戳</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">parseInt</span>(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() / <span class="number">1000</span>) + <span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * get signature</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>url </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns </span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> sign = <span class="keyword">async</span> (url) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> jsapi_ticket = <span class="keyword">await</span> getTicket()</span><br><span class="line">  <span class="keyword">const</span> obj = &#123;</span><br><span class="line">    jsapi_ticket,</span><br><span class="line">    noncestr: createNonceStr(),</span><br><span class="line">    timestamp: createTimestamp(),</span><br><span class="line">    url,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> signature = sha1(objToString(obj))</span><br><span class="line"></span><br><span class="line">  obj.signature = signature</span><br><span class="line">  obj.appid = appid</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> obj</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * props sort to string like 'key = val &amp; key2 = val2'</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>obj </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns </span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">objToString</span>(<span class="params">obj</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> keys = <span class="built_in">Object</span>.keys(obj)</span><br><span class="line">  keys = keys.sort()</span><br><span class="line">  <span class="keyword">var</span> newObj = &#123;&#125;</span><br><span class="line">  keys.forEach(<span class="function"><span class="params">prop</span>=&gt;</span>&#123;</span><br><span class="line">    newObj[prop] = obj[prop]</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">var</span> string = <span class="string">''</span></span><br><span class="line">  <span class="keyword">for</span>( k <span class="keyword">in</span> newObj)&#123;</span><br><span class="line">    string += <span class="string">'&amp;'</span> + k + <span class="string">'='</span> + newObj[k]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  string = string.substring(<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">return</span> string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = sign</span><br></pre></td></tr></table></figure></li><li><p>请求授权</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;Express&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;link rel="stylesheet" href="/</span>stylesheets/style.css<span class="string">"&gt;</span></span><br><span class="line"><span class="string">  &lt;script src="</span>http:<span class="comment">//res.wx.qq.com/open/js/jweixin-1.6.0.js"&gt;&lt;/script&gt;</span></span><br><span class="line">  &lt;script src=<span class="string">"https://unpkg.com/axios/dist/axios.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script src="https:/</span><span class="regexp">/cdn.jsdelivr.net/</span>npm/vue@<span class="number">2.6</span><span class="number">.14</span><span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;script src="</span><span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">  &lt;div id="</span>app<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;Express&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;p @click="</span>scanQRCode<span class="string">"&gt;Welcome to Express&lt;/p&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;script&gt;</span></span><br><span class="line"><span class="string">    new Vue(&#123;</span></span><br><span class="line"><span class="string">      el: '#app',</span></span><br><span class="line"><span class="string">      mounted() &#123;</span></span><br><span class="line"><span class="string">        this.wxconfig()</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      methods: &#123;</span></span><br><span class="line"><span class="string">        wxconfig() &#123;</span></span><br><span class="line"><span class="string">          const url = encodeURIComponent(location.href.split('#')[0])</span></span><br><span class="line"><span class="string">          axios.get(`http://test.buxiaoxing.com/jsapi?url=$&#123;url&#125;`).then((res) =&gt; &#123;</span></span><br><span class="line"><span class="string">            const &#123;</span></span><br><span class="line"><span class="string">              appid,</span></span><br><span class="line"><span class="string">              noncestr,</span></span><br><span class="line"><span class="string">              timestamp,</span></span><br><span class="line"><span class="string">              signature</span></span><br><span class="line"><span class="string">            &#125; = res.data</span></span><br><span class="line"><span class="string">            wx.config(&#123;</span></span><br><span class="line"><span class="string">              debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class="line"><span class="string">              appId: appid, // 必填，公众号的唯一标识</span></span><br><span class="line"><span class="string">              timestamp, // 必填，生成签名的时间戳</span></span><br><span class="line"><span class="string">              nonceStr: noncestr, // 必填，生成签名的随机串</span></span><br><span class="line"><span class="string">              signature, // 必填，签名</span></span><br><span class="line"><span class="string">              jsApiList: [</span></span><br><span class="line"><span class="string">                'scanQRCode',</span></span><br><span class="line"><span class="string">              ] // 必填，需要使用的JS接口列表</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">          &#125;).catch(err =&gt; &#123;</span></span><br><span class="line"><span class="string">            console.log(err)</span></span><br><span class="line"><span class="string">          &#125;)</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        scanQRCode() &#123;</span></span><br><span class="line"><span class="string">          wx.scanQRCode(&#123;</span></span><br><span class="line"><span class="string">            needResult: 0, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，</span></span><br><span class="line"><span class="string">            scanType: ["</span>qrCode<span class="string">", "</span>barCode<span class="string">"], // 可以指定扫二维码还是一维码，默认二者都有</span></span><br><span class="line"><span class="string">            success: function (res) &#123;</span></span><br><span class="line"><span class="string">              var result = res.resultStr; // 当needResult 为 1 时，扫码返回的结果</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;醉后不知天在水，满船清梦压星河&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="后端" scheme="https://www.buxiaoxing.com/tags/后端/"/>
    
    <category term="WeChat" scheme="https://www.buxiaoxing.com/tags/WeChat/"/>
    
  </entry>
  
</feed>
